# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'window.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import numpy as np

from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMainWindow, QFileDialog, QGraphicsPixmapItem, QGraphicsScene, QListWidgetItem, QApplication, QMessageBox
from PyQt5.QtGui import QImage, QPixmap, QIcon
from PyQt5.QtCore import QMutex, Qt, QSize
from PyQt5.uic import loadUi

from Read_dcm import Get_dcm_array 
from Threads import ThreadIconlist
import images

import os
import sys



class Mainwindow(QMainWindow):
    def __init__(self):
        super(Mainwindow, self).__init__()
        # loadUi(r'./window.ui', self)
        self.setupUi()
        self.ui_setup()
        self.state()
        
    def setupUi(self):
        self.setObjectName("MainWindow")
        self.setWindowModality(QtCore.Qt.NonModal)
        self.setEnabled(True)
        self.resize(820, 615)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(False)
        font.setUnderline(False)
        font.setStrikeOut(False)
        font.setStyleStrategy(QtGui.QFont.PreferDefault)
        self.setFont(font)
        self.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.setContextMenuPolicy(QtCore.Qt.DefaultContextMenu)
        self.setAcceptDrops(False)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/qrc/GUI_Logo.ico"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.setWindowIcon(icon)
        self.setWindowOpacity(1.0)
        self.setToolTip("")
        self.setStatusTip("")
        self.setWindowFilePath("")
        self.setIconSize(QtCore.QSize(50, 50))
        self.setToolButtonStyle(QtCore.Qt.ToolButtonIconOnly)
        self.setAnimated(True)
        self.setDocumentMode(False)
        self.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.setDockOptions(QtWidgets.QMainWindow.AllowTabbedDocks|QtWidgets.QMainWindow.AnimatedDocks)
        self.setUnifiedTitleAndToolBarOnMac(False)
        self.centralwidget = QtWidgets.QWidget(self)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout()
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.widgetsave = QtWidgets.QWidget(self.centralwidget)
        self.widgetsave.setObjectName("widgetsave")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.widgetsave)
        self.horizontalLayout.setSizeConstraint(QtWidgets.QLayout.SetDefaultConstraint)
        self.horizontalLayout.setContentsMargins(0, 3, -1, 3)
        self.horizontalLayout.setSpacing(6)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.lcdNumber = QtWidgets.QLCDNumber(self.widgetsave)
        self.lcdNumber.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lcdNumber.sizePolicy().hasHeightForWidth())
        self.lcdNumber.setSizePolicy(sizePolicy)
        self.lcdNumber.setMinimumSize(QtCore.QSize(98, 28))
        font = QtGui.QFont()
        font.setPointSize(10)
        font.setBold(False)
        font.setStyleStrategy(QtGui.QFont.PreferDefault)
        self.lcdNumber.setFont(font)
        self.lcdNumber.setMouseTracking(False)
        self.lcdNumber.setToolTipDuration(-1)
        self.lcdNumber.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.lcdNumber.setAutoFillBackground(False)
        self.lcdNumber.setStyleSheet("color: rgb(27, 134, 147);")
        self.lcdNumber.setInputMethodHints(QtCore.Qt.ImhNone)
        self.lcdNumber.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.lcdNumber.setLineWidth(0)
        self.lcdNumber.setSmallDecimalPoint(False)
        self.lcdNumber.setDigitCount(5)
        self.lcdNumber.setSegmentStyle(QtWidgets.QLCDNumber.Flat)
        self.lcdNumber.setProperty("intValue", 0)
        self.lcdNumber.setObjectName("lcdNumber")
        self.horizontalLayout.addWidget(self.lcdNumber)
        self.pushButtonsavepath = QtWidgets.QPushButton(self.widgetsave)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButtonsavepath.sizePolicy().hasHeightForWidth())
        self.pushButtonsavepath.setSizePolicy(sizePolicy)
        self.pushButtonsavepath.setMinimumSize(QtCore.QSize(0, 0))
        self.pushButtonsavepath.setObjectName("pushButtonsavepath")
        self.horizontalLayout.addWidget(self.pushButtonsavepath)
        self.lineEditSavepath = QtWidgets.QLineEdit(self.widgetsave)
        self.lineEditSavepath.setEnabled(True)
        self.lineEditSavepath.setEchoMode(QtWidgets.QLineEdit.Normal)
        self.lineEditSavepath.setDragEnabled(True)
        self.lineEditSavepath.setReadOnly(False)
        self.lineEditSavepath.setObjectName("lineEditSavepath")
        self.horizontalLayout.addWidget(self.lineEditSavepath)
        self.comboBoxsave = QtWidgets.QComboBox(self.widgetsave)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.comboBoxsave.sizePolicy().hasHeightForWidth())
        self.comboBoxsave.setSizePolicy(sizePolicy)
        self.comboBoxsave.setEditable(False)
        self.comboBoxsave.setInsertPolicy(QtWidgets.QComboBox.InsertAtBottom)
        self.comboBoxsave.setSizeAdjustPolicy(QtWidgets.QComboBox.AdjustToContents)
        self.comboBoxsave.setIconSize(QtCore.QSize(0, 0))
        self.comboBoxsave.setPlaceholderText("")
        self.comboBoxsave.setDuplicatesEnabled(False)
        self.comboBoxsave.setFrame(True)
        self.comboBoxsave.setObjectName("comboBoxsave")
        self.comboBoxsave.addItem("")
        self.comboBoxsave.addItem("")
        self.comboBoxsave.addItem("")
        self.horizontalLayout.addWidget(self.comboBoxsave)
        self.pushButtonsave = QtWidgets.QPushButton(self.widgetsave)
        self.pushButtonsave.setObjectName("pushButtonsave")
        self.horizontalLayout.addWidget(self.pushButtonsave)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout.addItem(spacerItem)
        self.verticalLayout_6.addWidget(self.widgetsave)
        self.graphicsView = QtWidgets.QGraphicsView(self.centralwidget)
        self.graphicsView.setEnabled(True)
        self.graphicsView.setMinimumSize(QtCore.QSize(0, 0))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(200, 200, 200))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 127, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(170, 170, 170))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(200, 200, 200))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(200, 200, 200))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(200, 200, 200))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(227, 227, 227))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(160, 160, 160))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(160, 160, 160))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(200, 200, 200))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(200, 200, 200))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(105, 105, 105))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(245, 245, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.ToolTipText, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 127, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(200, 200, 200))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Button, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Light, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Midlight, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 127, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Dark, brush)
        brush = QtGui.QBrush(QtGui.QColor(170, 170, 170))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Mid, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 127, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Text, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 255))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.BrightText, brush)
        brush = QtGui.QBrush(QtGui.QColor(127, 127, 127))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ButtonText, brush)
        brush = QtGui.QBrush(QtGui.QColor(200, 200, 200))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Base, brush)
        brush = QtGui.QBrush(QtGui.QColor(200, 200, 200))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Window, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.Shadow, brush)
        brush = QtGui.QBrush(QtGui.QColor(245, 245, 245))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.AlternateBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(255, 255, 220))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipBase, brush)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.ToolTipText, brush)
        self.graphicsView.setPalette(palette)
        self.graphicsView.setMouseTracking(False)
        self.graphicsView.setAutoFillBackground(False)
        self.graphicsView.setStyleSheet("")
        self.graphicsView.setFrameShape(QtWidgets.QFrame.Panel)
        self.graphicsView.setFrameShadow(QtWidgets.QFrame.Plain)
        self.graphicsView.setLineWidth(0)
        brush = QtGui.QBrush(QtGui.QColor(0, 0, 0))
        brush.setStyle(QtCore.Qt.NoBrush)
        self.graphicsView.setBackgroundBrush(brush)
        self.graphicsView.setSceneRect(QtCore.QRectF(0.0, 0.0, 0.0, 0.0))
        self.graphicsView.setRenderHints(QtGui.QPainter.LosslessImageRendering|QtGui.QPainter.TextAntialiasing)
        self.graphicsView.setDragMode(QtWidgets.QGraphicsView.ScrollHandDrag)
        self.graphicsView.setResizeAnchor(QtWidgets.QGraphicsView.NoAnchor)
        self.graphicsView.setViewportUpdateMode(QtWidgets.QGraphicsView.FullViewportUpdate)
        self.graphicsView.setObjectName("graphicsView")
        self.verticalLayout_6.addWidget(self.graphicsView)
        self.horizontalLayout_2.addLayout(self.verticalLayout_6)
        self.horizontalLayout_3.addLayout(self.horizontalLayout_2)
        self.verticalScrollBar = QtWidgets.QScrollBar(self.centralwidget)
        self.verticalScrollBar.setEnabled(False)
        self.verticalScrollBar.setInputMethodHints(QtCore.Qt.ImhNone)
        self.verticalScrollBar.setMinimum(1)
        self.verticalScrollBar.setMaximum(100)
        self.verticalScrollBar.setOrientation(QtCore.Qt.Vertical)
        self.verticalScrollBar.setObjectName("verticalScrollBar")
        self.horizontalLayout_3.addWidget(self.verticalScrollBar)
        self.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(self)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 820, 28))
        font = QtGui.QFont()
        font.setPointSize(13)
        font.setBold(False)
        font.setUnderline(False)
        font.setStrikeOut(False)
        font.setStyleStrategy(QtGui.QFont.PreferDefault)
        self.menubar.setFont(font)
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(False)
        font.setStyleStrategy(QtGui.QFont.PreferDefault)
        self.menuFile.setFont(font)
        self.menuFile.setObjectName("menuFile")
        self.menuWindow = QtWidgets.QMenu(self.menubar)
        self.menuWindow.setObjectName("menuWindow")
        self.menuViews = QtWidgets.QMenu(self.menubar)
        self.menuViews.setToolTip("")
        self.menuViews.setStatusTip("")
        self.menuViews.setObjectName("menuViews")
        self.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(self)
        self.statusbar.setEnabled(True)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setUnderline(False)
        font.setStrikeOut(False)
        font.setStyleStrategy(QtGui.QFont.PreferDefault)
        self.statusbar.setFont(font)
        self.statusbar.setObjectName("statusbar")
        self.setStatusBar(self.statusbar)
        self.toolBar = QtWidgets.QToolBar(self)
        self.toolBar.setMinimumSize(QtCore.QSize(0, 0))
        self.toolBar.setCursor(QtGui.QCursor(QtCore.Qt.ArrowCursor))
        self.toolBar.setStyleSheet("")
        self.toolBar.setMovable(False)
        self.toolBar.setIconSize(QtCore.QSize(50, 50))
        self.toolBar.setObjectName("toolBar")
        self.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)
        self.dockWidgetBrowse = QtWidgets.QDockWidget(self)
        self.dockWidgetBrowse.setEnabled(True)
        self.dockWidgetBrowse.setMinimumSize(QtCore.QSize(375, 396))
        self.dockWidgetBrowse.setBaseSize(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setUnderline(False)
        font.setStrikeOut(False)
        font.setStyleStrategy(QtGui.QFont.PreferDefault)
        self.dockWidgetBrowse.setFont(font)
        self.dockWidgetBrowse.setAutoFillBackground(False)
        self.dockWidgetBrowse.setStyleSheet("")
        self.dockWidgetBrowse.setFloating(False)
        self.dockWidgetBrowse.setFeatures(QtWidgets.QDockWidget.DockWidgetClosable|QtWidgets.QDockWidget.DockWidgetMovable)
        self.dockWidgetBrowse.setObjectName("dockWidgetBrowse")
        self.dockWidgetContentsBrowse = QtWidgets.QWidget()
        self.dockWidgetContentsBrowse.setObjectName("dockWidgetContentsBrowse")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.dockWidgetContentsBrowse)
        self.verticalLayout.setObjectName("verticalLayout")
        self.widget = QtWidgets.QWidget(self.dockWidgetContentsBrowse)
        self.widget.setObjectName("widget")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.widget)
        self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.horizontalLayoutMatrix = QtWidgets.QHBoxLayout()
        self.horizontalLayoutMatrix.setSpacing(3)
        self.horizontalLayoutMatrix.setObjectName("horizontalLayoutMatrix")
        self.labelmatrix = QtWidgets.QLabel(self.widget)
        self.labelmatrix.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.labelmatrix.sizePolicy().hasHeightForWidth())
        self.labelmatrix.setSizePolicy(sizePolicy)
        self.labelmatrix.setMinimumSize(QtCore.QSize(77, 30))
        self.labelmatrix.setMaximumSize(QtCore.QSize(77, 16777215))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setUnderline(False)
        font.setStrikeOut(False)
        font.setStyleStrategy(QtGui.QFont.PreferDefault)
        self.labelmatrix.setFont(font)
        self.labelmatrix.setMouseTracking(True)
        self.labelmatrix.setScaledContents(False)
        self.labelmatrix.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.labelmatrix.setWordWrap(False)
        self.labelmatrix.setObjectName("labelmatrix")
        self.horizontalLayoutMatrix.addWidget(self.labelmatrix, 0, QtCore.Qt.AlignLeft)
        self.spinBoxMatrix = QtWidgets.QSpinBox(self.widget)
        self.spinBoxMatrix.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.spinBoxMatrix.sizePolicy().hasHeightForWidth())
        self.spinBoxMatrix.setSizePolicy(sizePolicy)
        self.spinBoxMatrix.setMinimumSize(QtCore.QSize(70, 0))
        self.spinBoxMatrix.setMaximumSize(QtCore.QSize(70, 16777215))
        self.spinBoxMatrix.setStyleSheet("")
        self.spinBoxMatrix.setWrapping(False)
        self.spinBoxMatrix.setFrame(False)
        self.spinBoxMatrix.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.spinBoxMatrix.setReadOnly(False)
        self.spinBoxMatrix.setButtonSymbols(QtWidgets.QAbstractSpinBox.UpDownArrows)
        self.spinBoxMatrix.setSuffix("")
        self.spinBoxMatrix.setPrefix("")
        self.spinBoxMatrix.setMinimum(64)
        self.spinBoxMatrix.setMaximum(2048)
        self.spinBoxMatrix.setStepType(QtWidgets.QAbstractSpinBox.DefaultStepType)
        self.spinBoxMatrix.setProperty("value", 512)
        self.spinBoxMatrix.setObjectName("spinBoxMatrix")
        self.horizontalLayoutMatrix.addWidget(self.spinBoxMatrix)
        self.horizontalSliderMatrix = QtWidgets.QSlider(self.widget)
        self.horizontalSliderMatrix.setEnabled(False)
        self.horizontalSliderMatrix.setMinimumSize(QtCore.QSize(0, 20))
        self.horizontalSliderMatrix.setMinimum(64)
        self.horizontalSliderMatrix.setMaximum(2048)
        self.horizontalSliderMatrix.setProperty("value", 512)
        self.horizontalSliderMatrix.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderMatrix.setInvertedAppearance(False)
        self.horizontalSliderMatrix.setInvertedControls(False)
        self.horizontalSliderMatrix.setTickPosition(QtWidgets.QSlider.NoTicks)
        self.horizontalSliderMatrix.setObjectName("horizontalSliderMatrix")
        self.horizontalLayoutMatrix.addWidget(self.horizontalSliderMatrix)
        self.verticalLayout_3.addLayout(self.horizontalLayoutMatrix)
        self.horizontalLayoutWW = QtWidgets.QHBoxLayout()
        self.horizontalLayoutWW.setSpacing(3)
        self.horizontalLayoutWW.setObjectName("horizontalLayoutWW")
        self.labelww = QtWidgets.QLabel(self.widget)
        self.labelww.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.labelww.sizePolicy().hasHeightForWidth())
        self.labelww.setSizePolicy(sizePolicy)
        self.labelww.setMinimumSize(QtCore.QSize(77, 30))
        self.labelww.setMaximumSize(QtCore.QSize(77, 16777215))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setUnderline(False)
        font.setStrikeOut(False)
        font.setStyleStrategy(QtGui.QFont.PreferDefault)
        self.labelww.setFont(font)
        self.labelww.setMouseTracking(True)
        self.labelww.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.labelww.setObjectName("labelww")
        self.horizontalLayoutWW.addWidget(self.labelww)
        self.spinBoxWW = QtWidgets.QSpinBox(self.widget)
        self.spinBoxWW.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.spinBoxWW.sizePolicy().hasHeightForWidth())
        self.spinBoxWW.setSizePolicy(sizePolicy)
        self.spinBoxWW.setMinimumSize(QtCore.QSize(70, 0))
        self.spinBoxWW.setMaximumSize(QtCore.QSize(70, 16777215))
        self.spinBoxWW.setStyleSheet("")
        self.spinBoxWW.setFrame(False)
        self.spinBoxWW.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.spinBoxWW.setMinimum(1)
        self.spinBoxWW.setMaximum(4096)
        self.spinBoxWW.setProperty("value", 1)
        self.spinBoxWW.setObjectName("spinBoxWW")
        self.horizontalLayoutWW.addWidget(self.spinBoxWW)
        self.horizontalSliderWW = QtWidgets.QSlider(self.widget)
        self.horizontalSliderWW.setEnabled(False)
        self.horizontalSliderWW.setMinimumSize(QtCore.QSize(0, 30))
        self.horizontalSliderWW.setMinimum(1)
        self.horizontalSliderWW.setMaximum(4095)
        self.horizontalSliderWW.setPageStep(200)
        self.horizontalSliderWW.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderWW.setTickPosition(QtWidgets.QSlider.TicksBelow)
        self.horizontalSliderWW.setObjectName("horizontalSliderWW")
        self.horizontalLayoutWW.addWidget(self.horizontalSliderWW)
        self.verticalLayout_3.addLayout(self.horizontalLayoutWW)
        self.horizontalLayoutWL = QtWidgets.QHBoxLayout()
        self.horizontalLayoutWL.setSpacing(3)
        self.horizontalLayoutWL.setObjectName("horizontalLayoutWL")
        self.labelwl = QtWidgets.QLabel(self.widget)
        self.labelwl.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.labelwl.sizePolicy().hasHeightForWidth())
        self.labelwl.setSizePolicy(sizePolicy)
        self.labelwl.setMinimumSize(QtCore.QSize(77, 30))
        self.labelwl.setMaximumSize(QtCore.QSize(77, 16777215))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setUnderline(False)
        font.setStrikeOut(False)
        font.setStyleStrategy(QtGui.QFont.PreferDefault)
        self.labelwl.setFont(font)
        self.labelwl.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.labelwl.setObjectName("labelwl")
        self.horizontalLayoutWL.addWidget(self.labelwl)
        self.spinBoxWL = QtWidgets.QSpinBox(self.widget)
        self.spinBoxWL.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.spinBoxWL.sizePolicy().hasHeightForWidth())
        self.spinBoxWL.setSizePolicy(sizePolicy)
        self.spinBoxWL.setMinimumSize(QtCore.QSize(70, 0))
        self.spinBoxWL.setMaximumSize(QtCore.QSize(70, 16777215))
        self.spinBoxWL.setBaseSize(QtCore.QSize(0, 0))
        self.spinBoxWL.setStyleSheet("")
        self.spinBoxWL.setFrame(False)
        self.spinBoxWL.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.spinBoxWL.setMinimum(-1024)
        self.spinBoxWL.setMaximum(3071)
        self.spinBoxWL.setObjectName("spinBoxWL")
        self.horizontalLayoutWL.addWidget(self.spinBoxWL)
        self.horizontalSliderWL = QtWidgets.QSlider(self.widget)
        self.horizontalSliderWL.setEnabled(False)
        self.horizontalSliderWL.setMinimumSize(QtCore.QSize(0, 30))
        self.horizontalSliderWL.setMinimum(-1024)
        self.horizontalSliderWL.setMaximum(3071)
        self.horizontalSliderWL.setPageStep(200)
        self.horizontalSliderWL.setOrientation(QtCore.Qt.Horizontal)
        self.horizontalSliderWL.setTickPosition(QtWidgets.QSlider.TicksAbove)
        self.horizontalSliderWL.setObjectName("horizontalSliderWL")
        self.horizontalLayoutWL.addWidget(self.horizontalSliderWL)
        self.verticalLayout_3.addLayout(self.horizontalLayoutWL)
        self.verticalLayout.addWidget(self.widget)
        self.widgetLoading = QtWidgets.QWidget(self.dockWidgetContentsBrowse)
        self.widgetLoading.setEnabled(True)
        self.widgetLoading.setObjectName("widgetLoading")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.widgetLoading)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.horizontalLayoutLoading = QtWidgets.QHBoxLayout()
        self.horizontalLayoutLoading.setObjectName("horizontalLayoutLoading")
        self.labelLoading = QtWidgets.QLabel(self.widgetLoading)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setUnderline(False)
        font.setStrikeOut(False)
        font.setStyleStrategy(QtGui.QFont.PreferDefault)
        self.labelLoading.setFont(font)
        self.labelLoading.setObjectName("labelLoading")
        self.horizontalLayoutLoading.addWidget(self.labelLoading)
        self.progressBarLoading = QtWidgets.QProgressBar(self.widgetLoading)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setUnderline(False)
        font.setStrikeOut(False)
        font.setStyleStrategy(QtGui.QFont.PreferDefault)
        self.progressBarLoading.setFont(font)
        self.progressBarLoading.setStyleSheet("")
        self.progressBarLoading.setMinimum(0)
        self.progressBarLoading.setProperty("value", 0)
        self.progressBarLoading.setObjectName("progressBarLoading")
        self.horizontalLayoutLoading.addWidget(self.progressBarLoading)
        self.verticalLayout_2.addLayout(self.horizontalLayoutLoading)
        self.verticalLayout.addWidget(self.widgetLoading)
        self.tabWidget = QtWidgets.QTabWidget(self.dockWidgetContentsBrowse)
        self.tabWidget.setEnabled(False)
        self.tabWidget.setMinimumSize(QtCore.QSize(0, 200))
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(False)
        font.setUnderline(False)
        font.setStrikeOut(False)
        font.setStyleStrategy(QtGui.QFont.PreferDefault)
        self.tabWidget.setFont(font)
        self.tabWidget.setToolTip("")
        self.tabWidget.setStatusTip("")
        self.tabWidget.setStyleSheet("")
        self.tabWidget.setTabPosition(QtWidgets.QTabWidget.North)
        self.tabWidget.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.tabWidget.setDocumentMode(False)
        self.tabWidget.setTabsClosable(False)
        self.tabWidget.setMovable(True)
        self.tabWidget.setTabBarAutoHide(True)
        self.tabWidget.setObjectName("tabWidget")
        self.Thumbnail = QtWidgets.QWidget()
        self.Thumbnail.setObjectName("Thumbnail")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.Thumbnail)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.listWidget = QtWidgets.QListWidget(self.Thumbnail)
        self.listWidget.setEnabled(False)
        self.listWidget.setMinimumSize(QtCore.QSize(173, 0))
        self.listWidget.setSizeIncrement(QtCore.QSize(0, 0))
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(False)
        font.setUnderline(False)
        font.setStrikeOut(False)
        font.setStyleStrategy(QtGui.QFont.PreferDefault)
        self.listWidget.setFont(font)
        self.listWidget.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.listWidget.setFrameShadow(QtWidgets.QFrame.Plain)
        self.listWidget.setLineWidth(0)
        self.listWidget.setIconSize(QtCore.QSize(150, 150))
        self.listWidget.setMovement(QtWidgets.QListView.Static)
        self.listWidget.setResizeMode(QtWidgets.QListView.Adjust)
        self.listWidget.setViewMode(QtWidgets.QListView.IconMode)
        self.listWidget.setUniformItemSizes(False)
        self.listWidget.setObjectName("listWidget")
        self.verticalLayout_4.addWidget(self.listWidget)
        self.tabWidget.addTab(self.Thumbnail, "")
        self.Information = QtWidgets.QWidget()
        self.Information.setObjectName("Information")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.Information)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.textBrowser = QtWidgets.QTextBrowser(self.Information)
        self.textBrowser.setEnabled(False)
        font = QtGui.QFont()
        font.setPointSize(11)
        font.setBold(False)
        font.setUnderline(False)
        font.setStrikeOut(False)
        font.setStyleStrategy(QtGui.QFont.PreferDefault)
        self.textBrowser.setFont(font)
        self.textBrowser.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.IBeamCursor))
        self.textBrowser.setFrameShape(QtWidgets.QFrame.Panel)
        self.textBrowser.setFrameShadow(QtWidgets.QFrame.Plain)
        self.textBrowser.setLineWidth(0)
        self.textBrowser.setSizeAdjustPolicy(QtWidgets.QAbstractScrollArea.AdjustIgnored)
        self.textBrowser.setLineWrapMode(QtWidgets.QTextEdit.NoWrap)
        self.textBrowser.setReadOnly(True)
        self.textBrowser.setPlaceholderText("")
        self.textBrowser.setSearchPaths([])
        self.textBrowser.setObjectName("textBrowser")
        self.verticalLayout_5.addWidget(self.textBrowser)
        self.tabWidget.addTab(self.Information, "")
        self.verticalLayout.addWidget(self.tabWidget)
        self.dockWidgetBrowse.setWidget(self.dockWidgetContentsBrowse)
        self.addDockWidget(QtCore.Qt.DockWidgetArea(1), self.dockWidgetBrowse)
        self.actionExit = QtWidgets.QAction(self)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/qrc/退出.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.actionExit.setIcon(icon1)
        font = QtGui.QFont()
        font.setPointSize(11)
        self.actionExit.setFont(font)
        self.actionExit.setMenuRole(QtWidgets.QAction.TextHeuristicRole)
        self.actionExit.setIconVisibleInMenu(True)
        self.actionExit.setObjectName("actionExit")
        self.actionOpen_Dicom_File = QtWidgets.QAction(self)
        self.actionOpen_Dicom_File.setCheckable(False)
        self.actionOpen_Dicom_File.setChecked(False)
        self.actionOpen_Dicom_File.setEnabled(True)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/qrc/file.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.actionOpen_Dicom_File.setIcon(icon2)
        font = QtGui.QFont()
        font.setPointSize(11)
        self.actionOpen_Dicom_File.setFont(font)
        self.actionOpen_Dicom_File.setVisible(True)
        self.actionOpen_Dicom_File.setIconVisibleInMenu(True)
        self.actionOpen_Dicom_File.setObjectName("actionOpen_Dicom_File")
        self.actionHelp = QtWidgets.QAction(self)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/qrc/help.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.actionHelp.setIcon(icon3)
        font = QtGui.QFont()
        font.setPointSize(11)
        self.actionHelp.setFont(font)
        self.actionHelp.setIconVisibleInMenu(True)
        self.actionHelp.setObjectName("actionHelp")
        self.actionOpen_Dicom_Folder = QtWidgets.QAction(self)
        self.actionOpen_Dicom_Folder.setCheckable(False)
        self.actionOpen_Dicom_Folder.setEnabled(True)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/qrc/folder.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.actionOpen_Dicom_Folder.setIcon(icon4)
        font = QtGui.QFont()
        font.setPointSize(11)
        self.actionOpen_Dicom_Folder.setFont(font)
        self.actionOpen_Dicom_Folder.setObjectName("actionOpen_Dicom_Folder")
        self.actionAbout = QtWidgets.QAction(self)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/qrc/About.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.actionAbout.setIcon(icon5)
        font = QtGui.QFont()
        font.setPointSize(11)
        self.actionAbout.setFont(font)
        self.actionAbout.setIconVisibleInMenu(True)
        self.actionAbout.setObjectName("actionAbout")
        self.actionFullScreeen = QtWidgets.QAction(self)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/qrc/FullScreeen.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.actionFullScreeen.setIcon(icon6)
        font = QtGui.QFont()
        font.setPointSize(11)
        self.actionFullScreeen.setFont(font)
        self.actionFullScreeen.setObjectName("actionFullScreeen")
        self.actionMaximized = QtWidgets.QAction(self)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/qrc/Maximized.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.actionMaximized.setIcon(icon7)
        font = QtGui.QFont()
        font.setPointSize(11)
        self.actionMaximized.setFont(font)
        self.actionMaximized.setObjectName("actionMaximized")
        self.actionBrowse = QtWidgets.QAction(self)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(":/qrc/Browse.png"), QtGui.QIcon.Normal, QtGui.QIcon.On)
        self.actionBrowse.setIcon(icon8)
        font = QtGui.QFont()
        font.setPointSize(11)
        self.actionBrowse.setFont(font)
        self.actionBrowse.setObjectName("actionBrowse")
        self.menuFile.addAction(self.actionOpen_Dicom_File)
        self.menuFile.addAction(self.actionOpen_Dicom_Folder)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionAbout)
        self.menuFile.addAction(self.actionExit)
        self.menuWindow.addAction(self.actionFullScreeen)
        self.menuWindow.addAction(self.actionMaximized)
        self.menuViews.addAction(self.actionBrowse)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuViews.menuAction())
        self.menubar.addAction(self.menuWindow.menuAction())
        self.toolBar.addAction(self.actionOpen_Dicom_File)
        self.toolBar.addAction(self.actionOpen_Dicom_Folder)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionBrowse)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionAbout)

        self.retranslateUi()
        self.comboBoxsave.setCurrentIndex(0)
        self.tabWidget.setCurrentIndex(0)
        self.actionOpen_Dicom_Folder.triggered.connect(self.openfolder)
        self.actionOpen_Dicom_File.triggered.connect(self.openfile)
        self.actionFullScreeen.triggered.connect(self.showFullScreen)
        self.actionExit.triggered.connect(self.close_confirm)
        self.actionMaximized.triggered.connect(self.showMaximized)
        self.verticalScrollBar.valueChanged['int'].connect(self.lcdNumber.display)
        self.verticalScrollBar.valueChanged['int'].connect(self.draw)
        self.horizontalSliderWW.valueChanged['int'].connect(self.set_WW)
        self.horizontalSliderWL.valueChanged['int'].connect(self.set_WL)
        self.actionBrowse.triggered.connect(self.dockWidgetBrowse.show)
        self.listWidget.itemClicked['QListWidgetItem*'].connect(self.itemclicked)
        self.horizontalSliderMatrix.valueChanged['int'].connect(self.set_Matrix)
        # self.actionBrowse.triggered.connect(self.dockWidgetBrowse.raise)
        self.listWidget.itemActivated['QListWidgetItem*'].connect(self.itemclicked)
        self.actionAbout.triggered.connect(self.about)
        self.pushButtonsave.clicked.connect(self.save_image)
        self.comboBoxsave.currentIndexChanged['int'].connect(self.choose_format)
        self.pushButtonsavepath.clicked.connect(self.selectsavepath)
        self.lineEditSavepath.textEdited['QString'].connect(self.set_savepath)
        self.horizontalSliderWW.valueChanged['int'].connect(self.spinBoxWW.setValue)
        self.spinBoxWW.valueChanged['int'].connect(self.horizontalSliderWW.setValue)
        self.horizontalSliderWL.valueChanged['int'].connect(self.spinBoxWL.setValue)
        self.spinBoxWL.valueChanged['int'].connect(self.horizontalSliderWL.setValue)
        self.horizontalSliderMatrix.valueChanged['int'].connect(self.spinBoxMatrix.setValue)
        self.spinBoxMatrix.valueChanged['int'].connect(self.horizontalSliderMatrix.setValue)
        QtCore.QMetaObject.connectSlotsByName(self)

    def retranslateUi(self):
        _translate = QtCore.QCoreApplication.translate
        self.setWindowTitle(_translate("MainWindow", "Dicom Viewer 1.0"))
        self.lcdNumber.setToolTip(_translate("MainWindow", "LCD"))
        self.lcdNumber.setStatusTip(_translate("MainWindow", "LCD"))
        self.pushButtonsavepath.setText(_translate("MainWindow", "Path"))
        self.lineEditSavepath.setPlaceholderText(_translate("MainWindow", "Saving Path. Default: \'.\\\'"))
        self.comboBoxsave.setItemText(0, _translate("MainWindow", "JPG"))
        self.comboBoxsave.setItemText(1, _translate("MainWindow", "PNG"))
        self.comboBoxsave.setItemText(2, _translate("MainWindow", "BMP"))
        self.pushButtonsave.setText(_translate("MainWindow", "Save"))
        self.menuFile.setStatusTip(_translate("MainWindow", "File"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuWindow.setStatusTip(_translate("MainWindow", "Window"))
        self.menuWindow.setTitle(_translate("MainWindow", "Window"))
        self.menuViews.setTitle(_translate("MainWindow", "Views"))
        self.toolBar.setWindowTitle(_translate("MainWindow", "toolBar"))
        self.dockWidgetBrowse.setToolTip(_translate("MainWindow", "Browse"))
        self.dockWidgetBrowse.setStatusTip(_translate("MainWindow", "Browse"))
        self.dockWidgetBrowse.setWindowTitle(_translate("MainWindow", "Browse"))
        self.labelmatrix.setToolTip(_translate("MainWindow", "Matrix"))
        self.labelmatrix.setStatusTip(_translate("MainWindow", "Matrix"))
        self.labelmatrix.setText(_translate("MainWindow", "<html><head/><body><p>Matrix :</p></body></html>"))
        self.spinBoxMatrix.setToolTip(_translate("MainWindow", "Set Matrix"))
        self.spinBoxMatrix.setStatusTip(_translate("MainWindow", "Set Matrix"))
        self.horizontalSliderMatrix.setToolTip(_translate("MainWindow", "Set Matrix"))
        self.horizontalSliderMatrix.setStatusTip(_translate("MainWindow", "Set Matrix"))
        self.labelww.setText(_translate("MainWindow", "<html><head/><body><p>WW :</p></body></html>"))
        self.spinBoxWW.setToolTip(_translate("MainWindow", "Set Window Width"))
        self.spinBoxWW.setStatusTip(_translate("MainWindow", "Set Window Width"))
        self.horizontalSliderWW.setToolTip(_translate("MainWindow", "Set Window Width"))
        self.horizontalSliderWW.setStatusTip(_translate("MainWindow", "Set Window Width"))
        self.labelwl.setToolTip(_translate("MainWindow", "Window Level"))
        self.labelwl.setStatusTip(_translate("MainWindow", "Window Level"))
        self.labelwl.setText(_translate("MainWindow", "WL :"))
        self.spinBoxWL.setToolTip(_translate("MainWindow", "Set Window Level"))
        self.spinBoxWL.setStatusTip(_translate("MainWindow", "Set Window Level"))
        self.horizontalSliderWL.setToolTip(_translate("MainWindow", "Set Window Level"))
        self.horizontalSliderWL.setStatusTip(_translate("MainWindow", "Set Window Level"))
        self.labelLoading.setText(_translate("MainWindow", "Loading"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.Thumbnail), _translate("MainWindow", "Thumbnail"))
        self.tabWidget.setTabToolTip(self.tabWidget.indexOf(self.Thumbnail), _translate("MainWindow", "Thumbnail"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.Information), _translate("MainWindow", "Information"))
        self.tabWidget.setTabToolTip(self.tabWidget.indexOf(self.Information), _translate("MainWindow", "Information"))
        self.actionExit.setText(_translate("MainWindow", "Exit"))
        self.actionExit.setStatusTip(_translate("MainWindow", "Exit"))
        self.actionExit.setShortcut(_translate("MainWindow", "Ctrl+E"))
        self.actionOpen_Dicom_File.setText(_translate("MainWindow", "Open Dicom File"))
        self.actionOpen_Dicom_File.setIconText(_translate("MainWindow", "Open Dicom File"))
        self.actionOpen_Dicom_File.setStatusTip(_translate("MainWindow", "Open Dicom File"))
        self.actionOpen_Dicom_File.setShortcut(_translate("MainWindow", "Ctrl+Shift+O"))
        self.actionHelp.setText(_translate("MainWindow", "Help"))
        self.actionHelp.setStatusTip(_translate("MainWindow", "Help"))
        self.actionHelp.setShortcut(_translate("MainWindow", "Ctrl+H"))
        self.actionOpen_Dicom_Folder.setText(_translate("MainWindow", "Open Dicom Folder"))
        self.actionOpen_Dicom_Folder.setStatusTip(_translate("MainWindow", "Open Dicom Folder"))
        self.actionOpen_Dicom_Folder.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.actionAbout.setText(_translate("MainWindow", "About"))
        self.actionAbout.setStatusTip(_translate("MainWindow", "About"))
        self.actionAbout.setShortcut(_translate("MainWindow", "Ctrl+Shift+/"))
        self.actionFullScreeen.setText(_translate("MainWindow", "FullScreeen"))
        self.actionFullScreeen.setStatusTip(_translate("MainWindow", "FullScreeen"))
        self.actionFullScreeen.setShortcut(_translate("MainWindow", "Ctrl+F"))
        self.actionMaximized.setText(_translate("MainWindow", "Maximized"))
        self.actionMaximized.setStatusTip(_translate("MainWindow", "Maximized"))
        self.actionMaximized.setShortcut(_translate("MainWindow", "Ctrl+Shift+F"))
        self.actionBrowse.setText(_translate("MainWindow", "Browse"))
        self.actionBrowse.setStatusTip(_translate("MainWindow", "Browse"))
        self.actionBrowse.setShortcut(_translate("MainWindow", "Ctrl+B"))

    def ui_setup(self):
        # self.lcdNumber.setHidden(True)
        self.widgetsave.setHidden(True)
        self.verticalScrollBar.setHidden(True)
        self.widgetLoading.setHidden(True)

    def state(self):
        self.WL = 30
        self.WW = 400
        self.HUscale()
        self.matrix = 512
        self.save_format = 'jpg'
        self.save_path = '.'
        self.denoised = False

    def HUscale(self):
        self.CTmin = self.WL - self.WW//2 + 1024
        self.CTmax = self.WL + self.WW//2 + 1024
        if self.CTmin < 0:
            self.CTmin = 0
        if self.CTmax > 4095:
            self.CTmax = 4095

    def IconlistThread(self):
        self.icon_WW = self.WW
        self.icon_CTmin = self.CTmin
        self.icon_CTmax = self.CTmax
        self.widgetLoading.setVisible(True)
        self.progressBarLoading.setMaximum(self.dcm_read.len)
        self.progressBarLoading.setValue(0)
        self.threadiconlist = ThreadIconlist(self)
        self.threadiconlist.loading_signal.connect(self.Loadingprogressbar)
        self.threadiconlist.start()

    def Loadingprogressbar(self, idx):
        self.progressBarLoading.setValue(idx+1)

    def dcminfo(self):
        infolines = self.dcm_read.ds.formatted_lines()
        info = next(infolines)
        while True:
            try:
                infoline = next(infolines)
                info = info + '\n' + infoline
            except StopIteration:
                break
        self.textBrowser.setText(info)

    def iconlist(self, idx):
        img = self.dcm_read.getitem(idx)
        img = np.clip(img, self.icon_CTmin, self.icon_CTmax)
        img = img.astype(np.int16)
        img = ((img-self.icon_CTmin)/self.icon_WW)*255
        img = img.astype(np.int8)
        image = QImage(img,img.shape[1], img.shape[0],img.shape[1],
                                QImage.Format_Grayscale8)

        pix = QPixmap.fromImage(image)
        pix = pix.scaled(128,128, Qt.KeepAspectRatio, Qt.SmoothTransformation)

        item_icon = QListWidgetItem()
        item_icon.setSizeHint(QSize(150, 150))
        item_icon.setIcon(QIcon(pix))
        item_icon.setText(str(idx+1))
        self.listWidget.addItem(item_icon)
        self.listWidget.update()

    def itemclicked(self):
        item = self.listWidget.selectedItems()[0]
        idx = int(item.text())
        self.lcdNumber.display(idx)
        self.verticalScrollBar.setValue(idx)
        self.draw(idx)
        
    def openfolder(self):
        self.directory = QFileDialog.getExistingDirectory(self,"Choose Folder",r"C:\Users\Administrator\Desktop\\")
        if os.path.exists(self.directory):  
            self.dcm_read = Get_dcm_array(self.directory, openobj = 'folder')
            if self.dcm_read.len:
                try:
                    self.enable('folder')
                    self.draw(1)
                    self.IconlistThread()
                except PermissionError:
                    self.openfolder()
        
    def openfile(self):
        self.file_path, self.file_type = QFileDialog.getOpenFileName(self,"Choose a Dicom file",
                                                                     r"C:\Users\Administrator\Desktop\\",
                                                                     "Dicom files(*.dcm);;All files(*.*)")
        if self.file_path and self.file_type == 'Dicom files(*.dcm)':
            self.dcm_read = Get_dcm_array(self.file_path, openobj = 'file')
            self.enable('file')
            self.draw(1)
            self.IconlistThread()
        
    def set_WW(self, ww):
        self.WW = ww
        self.HUscale()
        self.draw(self.idx)
        if self.denoised:
            self.draw_denoised(self.idx)

    def set_WL(self, wl):
        self.WL = wl
        self.HUscale()
        self.draw(self.idx)
        if self.denoised:
            self.draw_denoised(self.idx)
    
    def set_Matrix(self, matrix):
        self.matrix = matrix
        self.draw(self.idx)
        if self.denoised:
            self.draw_denoised(self.idx)
        
    def draw(self, idx):
        self.idx = idx

        img = self.dcm_read.getitem(idx-1)
        img = np.clip(img, self.CTmin, self.CTmax)
        img = img.astype(np.int16)
        img = ((img-self.CTmin)/self.WW)*255

        img = img.astype(np.int8)

        image = QImage(img,img.shape[1], img.shape[0],img.shape[1],
                             QImage.Format_Grayscale8)
        pix   = QPixmap.fromImage(image)
        pix = pix.scaled(self.matrix, self.matrix, Qt.KeepAspectRatio, Qt.SmoothTransformation)
        item  = QGraphicsPixmapItem(pix)  #创建像素图元
        scene = QGraphicsScene()          #创建场景
        scene.addItem(item)
        self.graphicsView.setScene(scene)
        self.dcminfo()  

    def choose_format(self, idx):
        format_list = ['jpg', 'png', 'bmp']
        self.save_format = format_list[idx]

    def selectsavepath(self):
        self.save_path = QFileDialog.getExistingDirectory(self,"Choose Save Path",r"C:\Users\Administrator\Desktop\\")
        self.lineEditSavepath.setText(self.save_path)

    def set_savepath(self, path):
        if os.path.exists(path):    
            self.save_path = path
            self.pushButtonsave.setEnabled(True)
        elif path == '':
            self.save_path = '.'
            self.pushButtonsave.setEnabled(True)
        else:
            self.pushButtonsave.setEnabled(False)

    def save_image(self):
        img = self.dcm_read.getitem(self.idx-1)
        img = np.clip(img, self.CTmin, self.CTmax)
        img = img.astype(np.int16)
        img = ((img-self.CTmin)/self.WW)*255
        img = img.astype(np.int8)
        image = QImage(img,img.shape[1], img.shape[0],img.shape[1],
                             QImage.Format_Grayscale8)
        image.save(r'{}\{}-WW_{}-WL_{}.{}'.format(self.save_path, self.idx, self.WW, self.WL, self.save_format))

    def enable(self, openobj):
        self.WW = self.dcm_read.WW
        self.WL = self.dcm_read.WL
        self.HUscale()
        
        self.graphicsView.setEnabled(True)

        self.horizontalSliderMatrix.setEnabled(True)

        self.tabWidget.setEnabled(True)
        self.listWidget.setEnabled(True)
        self.textBrowser.setEnabled(True)

        self.horizontalSliderWL.setEnabled(True)
        self.horizontalSliderWW.setEnabled(True)
        self.horizontalSliderWW.blockSignals(True)
        self.horizontalSliderWL.blockSignals(True)
        self.horizontalSliderWW.setValue(self.WW)
        self.horizontalSliderWL.setValue(self.WL)
        self.horizontalSliderWW.blockSignals(False)
        self.horizontalSliderWL.blockSignals(False)


        self.labelmatrix.setEnabled(True)
        self.labelww.setEnabled(True)
        self.labelwl.setEnabled(True)
        self.spinBoxMatrix.setEnabled(True)
        self.spinBoxWW.setEnabled(True)
        self.spinBoxWL.setEnabled(True)
        self.spinBoxWW.setValue(self.WW)
        self.spinBoxWL.setValue(self.WL)

        self.actionOpen_Dicom_Folder.setEnabled(False)
        self.actionOpen_Dicom_File.setEnabled(False)
     
        self.widgetsave.setVisible(True)
        if openobj == 'folder':
            self.lcdNumber.setVisible(True)
            self.lcdNumber.display(1)
            self.verticalScrollBar.setVisible(True)
            self.verticalScrollBar.setEnabled(True)
            self.verticalScrollBar.setMaximum(self.dcm_read.len)
            self.verticalScrollBar.setValue(1)

        if openobj == 'file':
            self.lcdNumber.setHidden(True)
            self.verticalScrollBar.setHidden(True)
    
    def close_confirm(self):
        reply = QMessageBox.question(self, '退出', '确定退出吗？', QMessageBox.Yes | QMessageBox.Cancel, QMessageBox.Cancel)
        if reply == QMessageBox.Yes:
            self.close()

    def about(self):
        QMessageBox.about(self, 'About', '''Dicom Viewer 1.0    --2021-5-30\n
本软件仅适用于Dicom文件的浏览和格式转换。\n
制作者：张金源（Benny）
邮    箱：823573476@qq.com
地    点：四川大学华西校区男生院男一舍235
All Rights Reserved.''')

# import main_window_rc


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = Mainwindow()
    MainWindow.showMaximized()
    MainWindow.show()
    sys.exit(app.exec_())
